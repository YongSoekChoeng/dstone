


DECLARE

	V_MSG VARCHAR2(2000) := '';   
	V_SEQ NUMBER(5) := 0;   
	
	V_TASK_USER_AUTH_ROW 	AL_TASK_USER_AUTH%ROWTYPE;	
	V_RNDHR_MGR_ROW 		AL_RNDHR_MGR%ROWTYPE;	
	
BEGIN
	-- 1. 팀별사용자권한
    DELETE FROM AL_TASK_USER_AUTH;
	FOR TASK_CURSOR IN (
	    SELECT 
	        *
	    FROM AL_TASK_INFO
	    WHERE 1=1
	    	AND COMPCD = 'A10'
	    	AND CRSCD = 'A10B00001'
	    	AND CRSNO = '16'
	) LOOP
		FOR I IN 0..(3-1) LOOP
	
			-- 1-1. ROW 값 채우기
			V_TASK_USER_AUTH_ROW.COMPCD		:= TASK_CURSOR.COMPCD;
			V_TASK_USER_AUTH_ROW.CRSCD 		:= TASK_CURSOR.CRSCD;
			V_TASK_USER_AUTH_ROW.CRSNO		:= TASK_CURSOR.CRSNO;
			V_TASK_USER_AUTH_ROW.TEAMID		:= TASK_CURSOR.TEAMID;
			-- 팀코디
			IF I = 0 THEN
			    V_TASK_USER_AUTH_ROW.EPID 		:= 'M101119073007C60354X';
			    -- 1-1-1. 사용자권한종류(1:팀코디, 2:팀지도위원, 3:평가단, 4:자문위원)
			    V_TASK_USER_AUTH_ROW.USERAUTHKD := '1';
			-- 팀지도위원	    
			ELSIF I = 1 THEN
			    V_TASK_USER_AUTH_ROW.EPID 		:= 'M101119072601C60291X';
			    -- 1-1-1. 사용자권한종류(1:팀코디, 2:팀지도위원, 3:평가단, 4:자문위원)
			    V_TASK_USER_AUTH_ROW.USERAUTHKD := '2';			
			-- 평가단
			ELSE 
			    V_TASK_USER_AUTH_ROW.EPID 		:= 'M091229035822C982810';
			    -- 1-1-1. 사용자권한종류(1:팀코디, 2:팀지도위원, 3:평가단, 4:자문위원)
			    V_TASK_USER_AUTH_ROW.USERAUTHKD := '3';
			END IF;
		    V_TASK_USER_AUTH_ROW.INPUTID 	:= 'SYSTEM';
		    V_TASK_USER_AUTH_ROW.INPUTDT 	:= SYSDATE;
		    
			-- 1-2. 입력 SQL
			INSERT INTO AL_TASK_USER_AUTH  
			 ( 
			    COMPCD , CRSCD , CRSNO , TEAMID , EPID ,
			    USERAUTHKD , INPUTID , INPUTDT  
			 ) 
			VALUES 
			 ( 
			    V_TASK_USER_AUTH_ROW.COMPCD , V_TASK_USER_AUTH_ROW.CRSCD , V_TASK_USER_AUTH_ROW.CRSNO , V_TASK_USER_AUTH_ROW.TEAMID , V_TASK_USER_AUTH_ROW.EPID ,
			    V_TASK_USER_AUTH_ROW.USERAUTHKD , V_TASK_USER_AUTH_ROW.INPUTID , V_TASK_USER_AUTH_ROW.INPUTDT  
			 ) ;
			 
		END LOOP;
	END LOOP;
	
	-- 2. 기수별인사담당
    DELETE FROM AL_RNDHR_MGR;
	FOR TASK_CURSOR IN (
	    SELECT DISTINCT
	        COMPCD, CRSCD, CRSNO, MCOMPID
	    FROM AL_TASK_INFO
	    WHERE 1=1
	    	AND COMPCD = 'A10'
	    	AND CRSCD = 'A10B00001'
	    	AND CRSNO = '16'
	) LOOP
		-- 2-1. ROW 값 채우기
		V_RNDHR_MGR_ROW.COMPCD		:= TASK_CURSOR.COMPCD;
		V_RNDHR_MGR_ROW.CRSCD 		:= TASK_CURSOR.CRSCD;
		V_RNDHR_MGR_ROW.CRSNO		:= TASK_CURSOR.CRSNO;
	    V_RNDHR_MGR_ROW.EPID 		:= 'M091229035822C982811';
	    V_RNDHR_MGR_ROW.MCOMPID 	:= TASK_CURSOR.MCOMPID;
	    V_RNDHR_MGR_ROW.INPUTID 	:= 'SYSTEM';
	    V_RNDHR_MGR_ROW.INPUTDT 	:= SYSDATE;
		-- 2-2. 입력 SQL
		INSERT INTO AL_RNDHR_MGR  
		 ( 
		    COMPCD , CRSCD , CRSNO , EPID , MCOMPID ,
		    INPUTID , INPUTDT , UPDATEID , UPDATEDT  
		 ) 
		VALUES 
		 ( 
		    V_RNDHR_MGR_ROW.COMPCD , V_RNDHR_MGR_ROW.CRSCD , V_RNDHR_MGR_ROW.CRSNO , V_RNDHR_MGR_ROW.EPID , V_RNDHR_MGR_ROW.MCOMPID ,
		    V_RNDHR_MGR_ROW.INPUTID , V_RNDHR_MGR_ROW.INPUTDT , V_RNDHR_MGR_ROW.UPDATEID , V_RNDHR_MGR_ROW.UPDATEDT 
		 );
	END LOOP;
	
	COMMIT;
	    
END;




