

DECLARE

	V_MSG VARCHAR2(2000) := '';   
	V_SEQ0 NUMBER(5) := 1; 
	V_SEQ1 NUMBER(5) := 1;  
	V_PRTSEQ NUMBER(5) := 0;   
	V_SUB  VARCHAR(2000) := 0;
	
	V_ATTC_FILE_ROW 	AL_ATTC_FILE%ROWTYPE;	
	V_ATTC_ROW 			AL_ATTC%ROWTYPE;	
		
	V_TEAM_POST_ROW 		AL_TEAM_POST%ROWTYPE;	
	V_TASK_AUTH_ROW 		AL_TASK_AUTH%ROWTYPE;	
	
BEGIN
	-- 1. 팀공유자료실
    DELETE FROM AL_TEAM_POST;
	FOR TASK_CURSOR IN (
	    SELECT 
	        *
	    FROM AL_TASK_INFO
	    WHERE 1=1
	    	AND COMPCD = 'A10'
	    	AND CRSCD = 'A10B00001'
	    	AND CRSNO = '16'
	) LOOP
		V_SEQ0 := 1;
		V_SEQ1 := 1;
		V_PRTSEQ := 0;
		FOR EMP_CURSOR IN (
			SELECT 
			    EPID
			FROM AL2.AL_CRS_HR_MAP 
			WHERE 1=1
			    AND COMPCD = TASK_CURSOR.COMPCD
			    AND CRSCD = TASK_CURSOR.CRSCD
			    AND CRSNO = TASK_CURSOR.CRSNO
			    AND TEAMID = TASK_CURSOR.TEAMID
		) LOOP
			-- * 첨부
			V_ATTC_ROW.ATTCID		:=LPAD( TO_CHAR(ROUND(DBMS_RANDOM.VALUE*10000000000000000000000000000000)), 32, '0' );
			V_ATTC_ROW.INPUTID		:= 'SYSTEM';
			V_ATTC_ROW.INPUTDT		:= SYSDATE;
			INSERT INTO AL_ATTC  
			 ( 
			    ATTCID , INPUTID , INPUTDT , UPDATEID , UPDATEDT 
			 ) 
			VALUES 
			 ( 
			    V_ATTC_ROW.ATTCID , V_ATTC_ROW.INPUTID , V_ATTC_ROW.INPUTDT , V_ATTC_ROW.UPDATEID , V_ATTC_ROW.UPDATEDT 
			 );	
			-- * 첨부파일1
			V_ATTC_FILE_ROW.ATTCID			:= V_ATTC_ROW.ATTCID;
			V_ATTC_FILE_ROW.FILEID			:= LPAD( TO_CHAR(ROUND(DBMS_RANDOM.VALUE*10000000000000000000000000000000)), 32, '0' );
			-- 첨부종류(1:CEO결재상신,2:중간보고,3:AL자료(최종보고서),4:AL자료(최종발표자료),5:팀공유자료)
			V_ATTC_FILE_ROW.ATTCKD			:= '5';
			V_ATTC_FILE_ROW.SAVEPATH		:= '/CIC/ALC/TEAM/Disk33/'||V_ATTC_FILE_ROW.FILEID||'.txt';
			V_ATTC_FILE_ROW.ORIFILENM		:= TASK_CURSOR.TEAMNM||'팀 '||V_SEQ0||'번째 팀공유자료 첨부자료.txt';
			INSERT INTO AL_ATTC_FILE  
			 ( 
			    ATTCID , FILEID , ATTCKD , SAVEPATH , ORIFILENM ,
			    SAVEFILENM  
			 ) 
			VALUES 
			 ( 
			    V_ATTC_FILE_ROW.ATTCID , V_ATTC_FILE_ROW.FILEID , V_ATTC_FILE_ROW.ATTCKD , V_ATTC_FILE_ROW.SAVEPATH , V_ATTC_FILE_ROW.ORIFILENM ,
			    V_ATTC_FILE_ROW.SAVEFILENM   
			 );	 
			 	
			-- 1-1. ROW 값 채우기
			V_TEAM_POST_ROW.COMPCD		:= TASK_CURSOR.COMPCD;
			V_TEAM_POST_ROW.CRSCD 		:= TASK_CURSOR.CRSCD;
			V_TEAM_POST_ROW.CRSNO		:= TASK_CURSOR.CRSNO;
			V_TEAM_POST_ROW.TEAMID		:= TASK_CURSOR.TEAMID;
		    IF ROUND(DBMS_RANDOM.VALUE*10) < 5 THEN
		    	V_TEAM_POST_ROW.POSTID      := '0';
		    ELSE
		    	V_TEAM_POST_ROW.POSTID      := '1';
		    END IF;		
		    
			IF V_TEAM_POST_ROW.POSTID = 0 THEN 
			     V_TEAM_POST_ROW.SEQ 		:= V_SEQ0;
			ELSE
			     V_TEAM_POST_ROW.SEQ 		:= V_SEQ1;
			END IF;		    
		    
		    -- 팀 게시판
		    IF V_TEAM_POST_ROW.POSTID = 1 THEN 
		       -- 답글		
		       IF ROUND(DBMS_RANDOM.VALUE*10) < 5 THEN
		          IF V_SEQ1 > 1 THEN 
    		          SELECT MAX(SEQ) INTO V_PRTSEQ FROM AL_TEAM_POST 
    		          WHERE COMPCD = V_TEAM_POST_ROW.COMPCD AND CRSCD = V_TEAM_POST_ROW.CRSCD AND CRSNO = V_TEAM_POST_ROW.CRSNO AND TEAMID = V_TEAM_POST_ROW.TEAMID AND POSTID = V_TEAM_POST_ROW.POSTID;
    		          
    		          SELECT SUB INTO V_SUB FROM AL_TEAM_POST 
    		          WHERE COMPCD = V_TEAM_POST_ROW.COMPCD AND CRSCD = V_TEAM_POST_ROW.CRSCD AND CRSNO = V_TEAM_POST_ROW.CRSNO AND TEAMID = V_TEAM_POST_ROW.TEAMID AND POSTID = V_TEAM_POST_ROW.POSTID AND SEQ=V_PRTSEQ;
    		              		          
    		          V_TEAM_POST_ROW.PRTSEQ 		:= V_PRTSEQ;
    		          V_TEAM_POST_ROW.SUB 		    := V_SUB||'에 대한 답변';
    		          V_TEAM_POST_ROW.CONTS 		:= V_TEAM_POST_ROW.SUB||' 내용 ..........';		   		          
		          ELSE
    		          V_TEAM_POST_ROW.PRTSEQ 		:= 0;
    		          V_TEAM_POST_ROW.SUB 		:= TASK_CURSOR.TEAMNM||'팀 '||V_SEQ1||'번째 팀 게시물';
    		          V_TEAM_POST_ROW.CONTS 		:= TASK_CURSOR.TEAMNM||'팀 '||V_SEQ1||'번째 팀 게시물 내용 ..........';			          
		          END IF;
		       -- 원게시물       
		       ELSE
		          V_TEAM_POST_ROW.PRTSEQ 		:= 0;
		          V_TEAM_POST_ROW.SUB 		:= TASK_CURSOR.TEAMNM||'팀 '||V_SEQ1||'번째 팀 게시물';
		          V_TEAM_POST_ROW.CONTS 		:= TASK_CURSOR.TEAMNM||'팀 '||V_SEQ1||'번째 팀 게시물 내용 ..........';	
		       END IF;	   
		    -- 팀 자료실       
		    ELSE
		       V_TEAM_POST_ROW.PRTSEQ 		:= 0;
		       V_TEAM_POST_ROW.SUB 		:= TASK_CURSOR.TEAMNM||'팀 '||V_SEQ0||'번째 팀 자료';
		       V_TEAM_POST_ROW.CONTS 		:= TASK_CURSOR.TEAMNM||'팀 '||V_SEQ0||'번째 팀 자료 내용 ..........';		       
		    END IF;
		    
		    IF ROUND(DBMS_RANDOM.VALUE*10) < 3 THEN
		    	V_TEAM_POST_ROW.POSTYN 		:= 'Y';
		    ELSE
		    	V_TEAM_POST_ROW.POSTYN 		:= 'N';
		    END IF;
		    
		    V_TEAM_POST_ROW.CNT 		:= 0;
		    V_TEAM_POST_ROW.INPUTID 	:= EMP_CURSOR.EPID;
		    V_TEAM_POST_ROW.INPUTDT 	:= SYSTIMESTAMP;
		    V_TEAM_POST_ROW.ATTCID 		:= V_ATTC_ROW.ATTCID;
    			
			-- 1-2. 입력 SQL
			INSERT INTO AL_TEAM_POST  
			 ( 
			    COMPCD , CRSCD , CRSNO , TEAMID , POSTID, SEQ , PRTSEQ,
			    SUB , CONTS , POSTYN , CNT , INPUTID ,
			    INPUTDT , UPDATEID , UPDATEDT , ATTCID  
			 ) 
			VALUES 
			 ( 
			    V_TEAM_POST_ROW.COMPCD , V_TEAM_POST_ROW.CRSCD , V_TEAM_POST_ROW.CRSNO , V_TEAM_POST_ROW.TEAMID , V_TEAM_POST_ROW.POSTID , V_TEAM_POST_ROW.SEQ, V_TEAM_POST_ROW.PRTSEQ ,
			    V_TEAM_POST_ROW.SUB , V_TEAM_POST_ROW.CONTS , V_TEAM_POST_ROW.POSTYN , V_TEAM_POST_ROW.CNT , V_TEAM_POST_ROW.INPUTID ,
			    V_TEAM_POST_ROW.INPUTDT , V_TEAM_POST_ROW.UPDATEID , V_TEAM_POST_ROW.UPDATEDT , V_TEAM_POST_ROW.ATTCID  
			 );
			 
			 IF V_TEAM_POST_ROW.POSTID = 0 THEN 
			     V_SEQ0 := V_SEQ0 + 1;
			 ELSE
			     V_SEQ1 := V_SEQ1 + 1;
			 END IF;
			 
		 END LOOP;	
	END LOOP;
	
	-- 2. 과제자료실 권한
    DELETE FROM AL_TASK_AUTH;
	FOR TASK_CURSOR IN (
	    SELECT 
	        *
	    FROM AL_TASK_INFO
	    WHERE 1=1
	    	AND COMPCD = 'A10'
	    	AND CRSCD = 'A10B00001'
	    	AND CRSNO = '16'
	) LOOP
		FOR EMP_CURSOR IN (
			SELECT 
			    EPID
			FROM AL_CRS_HR_MAP 
			WHERE 1=1
			    AND COMPCD = TASK_CURSOR.COMPCD
			    AND CRSCD = TASK_CURSOR.CRSCD
			    AND CRSNO = TASK_CURSOR.CRSNO
			    AND TEAMID <> TASK_CURSOR.TEAMID
			    AND ROWNUM < 3
		) LOOP	
			-- 2-1. ROW 값 채우기
			V_TASK_AUTH_ROW.COMPCD		:= TASK_CURSOR.COMPCD;
			V_TASK_AUTH_ROW.CRSCD 		:= TASK_CURSOR.CRSCD;
			V_TASK_AUTH_ROW.CRSNO		:= TASK_CURSOR.CRSNO;
			V_TASK_AUTH_ROW.TEAMID		:= TASK_CURSOR.TEAMID;
		    V_TASK_AUTH_ROW.EPID 		:= EMP_CURSOR.EPID;

		    V_TASK_AUTH_ROW.USESTDT 	:= TO_CHAR(SYSDATE, 'YYYYMMDD');
		    V_TASK_AUTH_ROW.USEENDDT 	:= TO_CHAR(SYSDATE+100, 'YYYYMMDD');
		    V_TASK_AUTH_ROW.INPUTID 	:= 'SYSTEM';
		    V_TASK_AUTH_ROW.INPUTDT 	:= SYSDATE; 
			-- 2-2. 입력 SQL
			INSERT INTO AL_TASK_AUTH  
			 ( 
			    COMPCD , CRSCD , CRSNO , TEAMID , EPID ,
			    USESTDT , USEENDDT , INPUTID , INPUTDT  
			 ) 
			VALUES 
			 ( 
			    V_TASK_AUTH_ROW.COMPCD , V_TASK_AUTH_ROW.CRSCD , V_TASK_AUTH_ROW.CRSNO , V_TASK_AUTH_ROW.TEAMID , V_TASK_AUTH_ROW.EPID ,
			    V_TASK_AUTH_ROW.USESTDT , V_TASK_AUTH_ROW.USEENDDT , V_TASK_AUTH_ROW.INPUTID , V_TASK_AUTH_ROW.INPUTDT  
			 ) ;
		END LOOP;
	END LOOP;
	
	COMMIT;
	    
END;




