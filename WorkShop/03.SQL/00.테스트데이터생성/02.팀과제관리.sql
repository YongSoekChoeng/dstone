

DECLARE

	V_MSG VARCHAR2(2000) := '';   
	V_DATA_NUM NUMBER(5) := 1;   
	V_MCOMPID VARCHAR2(20) := '';   
	V_TASK_ROW AL_TASK_INFO%ROWTYPE;	
	
BEGIN
	-- 1. 팀과제 관리
    DELETE FROM AL_LOGIN_HIS;
    DELETE FROM AL_ORIALSTUDY_EVAL_ITEM;
    DELETE FROM AL_BICD_HIS;
    DELETE FROM AL_TASK_AUTH;
    DELETE FROM AL_ALSTUDY_EVAL_OPN;
    DELETE FROM AL_ORIALSTUDY_EVAL_GB;
    DELETE FROM AL_TEAM_POST;
    DELETE FROM AL_LST_REPO;
    DELETE FROM AL_MID_REPO;
    DELETE FROM AL_CEO_APPR_LINE;
    DELETE FROM AL_CEO_APPR;
    DELETE FROM AL_ATTC_FILE;
    DELETE FROM AL_ATTC;
    DELETE FROM AL_TASK_USER_AUTH;
    DELETE FROM AL_TASK_INFO_HIS;
    DELETE FROM AL_TASK_INFO;
	FOR TEAM_CURSOR IN (
        SELECT 
        MCOMPID 
        FROM AL_MCOMP_INFO 
	) LOOP
		
	    V_TASK_ROW.COMPCD := 'A10';
	    V_TASK_ROW.CRSCD := 'A10B00001';
	    V_TASK_ROW.CRSNO := '16';
	    V_TASK_ROW.TEAMID := LPAD(V_DATA_NUM, 32, '0');
	    V_TASK_ROW.TEAMNM := V_DATA_NUM;
	    V_TASK_ROW.TASKNM := V_DATA_NUM||'팀 테스트과제';
	    IF ROUND(DBMS_RANDOM.VALUE*10/3) = 1 THEN
	    	V_TASK_ROW.TASKTPCD := '0';
	    ELSIF ROUND(DBMS_RANDOM.VALUE*10/3) = 2 THEN
	    	V_TASK_ROW.TASKTPCD := '1';
	    ELSE
	    	V_TASK_ROW.TASKTPCD := '2';
	    END IF;
	    
	    V_TASK_ROW.TASKBG := V_TASK_ROW.TASKNM||'의 선정배경....';
	    V_TASK_ROW.EPTEFT := V_TASK_ROW.TASKNM||'의 기대효과....';
	    
	    IF ROUND(DBMS_RANDOM.VALUE*10/3) < 2 THEN
	    	V_TASK_ROW.EXCTRSLTKD := '0';
	    ELSIF ROUND(DBMS_RANDOM.VALUE*10/3) = 2 THEN
	    	V_TASK_ROW.EXCTRSLTKD := '1';
	    ELSE
	    	V_TASK_ROW.EXCTRSLTKD := '2';
	    END IF;
	    	 	
	    V_TASK_ROW.MCOMPID := TEAM_CURSOR.MCOMPID;
	    V_TASK_ROW.CSTMEM := '홍길동, 고길동, 마길동, 성춘향';
	    V_TASK_ROW.INPUTID := 'SYSTEM';
	    V_TASK_ROW.INPUTDT := SYSDATE;
						
		INSERT INTO AL_TASK_INFO  
		 ( 
		    COMPCD , CRSCD , CRSNO , TEAMID , TEAMNM , TASKNM ,
		    TASKTPCD , TASKBG , EPTEFT , EXCTRSLTKD , MCOMPID , CSTMEM,
		    INPUTID , INPUTDT , UPDATEID , UPDATEDT  
		 ) 
		VALUES 
		 ( 
		    V_TASK_ROW.COMPCD , V_TASK_ROW.CRSCD , V_TASK_ROW.CRSNO , V_TASK_ROW.TEAMID, V_TASK_ROW.TEAMNM , V_TASK_ROW.TASKNM ,
		    V_TASK_ROW.TASKTPCD , V_TASK_ROW.TASKBG , V_TASK_ROW.EPTEFT , V_TASK_ROW.EXCTRSLTKD , V_TASK_ROW.MCOMPID , V_TASK_ROW.CSTMEM,
		    V_TASK_ROW.INPUTID , V_TASK_ROW.INPUTDT , V_TASK_ROW.UPDATEID , V_TASK_ROW.UPDATEDT     
		 ) ;		 
	     V_DATA_NUM := V_DATA_NUM + 1;	
	     				
	END LOOP;
	
	-- 2. 팀원배정
	
	FOR MEM_CURSOR IN (
        SELECT 
		    C.COMPCD, C.CRSCD, C.CRSNO, H.EPID, H.NAME, H.OUCOMPCD, H.OUCOMPNM, M.MCOMPID, 
		    (SELECT TEAMID FROM AL_TASK_INFO WHERE MCOMPID = M.MCOMPID ) TEAMID
        FROM 
        	AL_MCOMP_INFO M,
        	AL_HR_BASIC H,
        	AL_CRS_HR_MAP C
        WHERE 1=1
            AND M.COMPCD = H.OUCOMPCD      	
            AND M.BICD = H.CURBICD
            AND H.COMPCD = C.COMPCD
            AND H.EPID = C.EPID
        ORDER BY MCOMPID
	) LOOP
		UPDATE AL_CRS_HR_MAP C SET 
			TEAMID = MEM_CURSOR.TEAMID
        WHERE 1=1
            AND C.COMPCD = MEM_CURSOR.COMPCD
            AND C.CRSCD = MEM_CURSOR.CRSCD
            AND C.CRSNO = MEM_CURSOR.CRSNO
            AND C.EPID = MEM_CURSOR.EPID ;
	END LOOP;
	
	-- 3. 팀장배정
    UPDATE AL_CRS_HR_MAP C SET 
    MGRYN = 'N'	;
    
	FOR MEM_CURSOR IN (
        SELECT
            A.*
        FROM
            (
            SELECT 
                COMPCD, CRSCD, CRSNO, TEAMID, MAX(EPID) EPID
            FROM 
                AL_CRS_HR_MAP 
            GROUP BY COMPCD, CRSCD, CRSNO, TEAMID
            ) A,
            AL_CRS_HR_MAP B
        WHERE 1=1
            AND A.COMPCD = B.COMPCD        
            AND A.CRSCD = B.CRSCD        
            AND A.CRSNO = B.CRSNO        
            AND A.EPID = B.EPID
	) LOOP
		UPDATE AL_CRS_HR_MAP C SET 
			MGRYN = 'Y'
        WHERE 1=1
            AND C.COMPCD = MEM_CURSOR.COMPCD
            AND C.CRSCD = MEM_CURSOR.CRSCD
            AND C.CRSNO = MEM_CURSOR.CRSNO
            AND C.EPID = MEM_CURSOR.EPID ;
	END LOOP;
	
	COMMIT;
	    
END;




